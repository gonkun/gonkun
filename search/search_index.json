{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"aws/","text":"","title":"AWS"},{"location":"dse/","text":"","title":"DataStax"},{"location":"k8s/","text":"Kubernetes Commands Get info about cluster kubectl cluster-info Get all pods kubectl get pods -A List pods Docker images in a specific namespace kubectl get pods -n <namespace> -o jsonpath=\"{.items[*].spec.containers[*].image}\" List all running pods in a specific namespace kubectl get pods -n <namespace> --field-selector=status.phase=Running List all non-running pods in a specific namespace kubectl get pods -A --field-selector=status.phase!=Running | grep -v Complete List of nodes and their memory size kubectl get no -o json | jq -r '.items | sort_by(.status.capacity.memory)[]|[.metadata.name,.status.capacity.memory]| @tsv' List of nodes and the number of pods running on them kubectl get pod -o json --all-namespaces | jq '.items | group_by(.spec.nodeName) | map({\"nodeName\": .[0].spec.nodeName, \"count\": length}) | sort_by(.count)' List of pods that eat up CPU kubectl top pods -A | sort --reverse --key 3 --numeric List of pods that eat up memoryCPU kubectl top pods -A | sort --reverse --key 4 --numeric Sorting list of pods (in this case, by the number of restarts) kubectl get pods --sort-by=.status.containerStatuses[0].restartCount Print limits and requests for each pod kubectl get pods -n <namespace> -o=custom-columns='NAME:spec.containers[*].name,MEMREQ:spec.containers[*].resources.requests.memory,MEMLIM:spec.containers[*].resources.limits.memory,CPUREQ:spec.containers[*].resources.requests.cpu,CPULIM:spec.containers[*].resources.limits.cpu' Print all services and their respective nodePorts kubectl get --all-namespaces svc -o json | jq -r '.items[] | [.metadata.name,([.spec.ports[].nodePort | tostring ] | join(\"|\"))]| @tsv' Print logs with human-readable timestamp kubectl -n <namespace> logs -f <pod_name> --timestamps Getting logs from all pods using alabel to filter kubectl -n <namespace> logs -f -l app=nginx Copy secrets from a namespace to another kubectl get secrets -o json --namespace <namespace_source> | jq '.items[].metadata.namespace = \"<namespace_destiny>\"' | kubectl create-f -","title":"Kubernetes"},{"location":"k8s/#kubernetes","text":"","title":"Kubernetes"},{"location":"k8s/#commands","text":"Get info about cluster kubectl cluster-info Get all pods kubectl get pods -A List pods Docker images in a specific namespace kubectl get pods -n <namespace> -o jsonpath=\"{.items[*].spec.containers[*].image}\" List all running pods in a specific namespace kubectl get pods -n <namespace> --field-selector=status.phase=Running List all non-running pods in a specific namespace kubectl get pods -A --field-selector=status.phase!=Running | grep -v Complete List of nodes and their memory size kubectl get no -o json | jq -r '.items | sort_by(.status.capacity.memory)[]|[.metadata.name,.status.capacity.memory]| @tsv' List of nodes and the number of pods running on them kubectl get pod -o json --all-namespaces | jq '.items | group_by(.spec.nodeName) | map({\"nodeName\": .[0].spec.nodeName, \"count\": length}) | sort_by(.count)' List of pods that eat up CPU kubectl top pods -A | sort --reverse --key 3 --numeric List of pods that eat up memoryCPU kubectl top pods -A | sort --reverse --key 4 --numeric Sorting list of pods (in this case, by the number of restarts) kubectl get pods --sort-by=.status.containerStatuses[0].restartCount Print limits and requests for each pod kubectl get pods -n <namespace> -o=custom-columns='NAME:spec.containers[*].name,MEMREQ:spec.containers[*].resources.requests.memory,MEMLIM:spec.containers[*].resources.limits.memory,CPUREQ:spec.containers[*].resources.requests.cpu,CPULIM:spec.containers[*].resources.limits.cpu' Print all services and their respective nodePorts kubectl get --all-namespaces svc -o json | jq -r '.items[] | [.metadata.name,([.spec.ports[].nodePort | tostring ] | join(\"|\"))]| @tsv' Print logs with human-readable timestamp kubectl -n <namespace> logs -f <pod_name> --timestamps Getting logs from all pods using alabel to filter kubectl -n <namespace> logs -f -l app=nginx Copy secrets from a namespace to another kubectl get secrets -o json --namespace <namespace_source> | jq '.items[].metadata.namespace = \"<namespace_destiny>\"' | kubectl create-f -","title":"Commands"},{"location":"terraform/","text":"","title":"Terraform"}]}